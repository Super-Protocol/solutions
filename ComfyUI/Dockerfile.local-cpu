# syntax = docker/dockerfile:1.4.0
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim

# The installer requires curl (and certificates) to download the release archive
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    git-lfs \
    build-essential \
    libgl1-mesa-glx \
    wget \
    curl \
    unzip \
    ffmpeg

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

# Set environment variables
ARG COMFYUI_VERSION=v0.3.10
ARG COMFYUI_MANAGER_VERSION=3.6.5
ENV PYTHONUNBUFFERED=1 \
    COMFYUI_REPO=https://github.com/comfyanonymous/ComfyUI.git \
    COMFYUI_MANAGER_REPO=https://github.com/ltdrdata/ComfyUI-Manager.git \
    COMFYUI_DIR=/opt/ComfyUI

# Clones the ComfyUI repository and checks out the latest release
# Clone the ComfyUI repository
RUN git clone --branch $COMFYUI_VERSION --single-branch $COMFYUI_REPO $COMFYUI_DIR

# Change into ComfyUI directory
WORKDIR $COMFYUI_DIR

RUN git config --local user.email "container@super-protocol.com" \
    && git config --global user.name "Container Builder"

# Create Python virtual environment
RUN --mount=type=cache,target=/root/.cache/uv \
    uv venv --seed --relocatable .venv
ENV VIRTUAL_ENV=$COMFYUI_DIR/.venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install PyTorch and its dependencies
# see https://docs.astral.sh/uv/guides/integration/pytorch/#the-uv-pip-interface
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

# Install the required Python packages for ComfyUI
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install -r requirements.txt

# Clones the ComfyUI Manager repository and checks out the latest release
# remove gitignore to allow adding submodule into custom_nodes
RUN rm .gitignore
RUN git submodule add $COMFYUI_MANAGER_REPO custom_nodes/ComfyUI-Manager \
    && cd custom_nodes/ComfyUI-Manager \
    && git checkout tags/$COMFYUI_MANAGER_VERSION
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install -r custom_nodes/ComfyUI-Manager/requirements.txt

# Creating ComfyUI Manager config file
RUN mkdir -p user/default/ComfyUI-Manager
RUN <<EOF cat >> user/default/ComfyUI-Manager/config.ini
[default]
preview_method = auto
file_logging = False
security_level = weak
skip_migration_check = True
model_download_by_agent = False
EOF

# commit current state so we can trace changes
RUN git add . && git commit -m "chore: initial setup"

# Expose the port the ComfyUI runs on
EXPOSE 8188

# Add a healthcheck to ensure the service is running
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8188/ || exit 1

# On startup, ComfyUI is started at its default port; the IP address is changed from localhost to 0.0.0.0, because Docker is only forwarding traffic
# to the IP address it assigns to the container, which is unknown at build time; listening to 0.0.0.0 means that ComfyUI listens to all incoming
# traffic; the auto-launch feature is disabled, because we do not want (nor is it possible) to open a browser window in a Docker container
CMD [".venv/bin/python", "main.py", "--listen", "0.0.0.0", "--port", "8188", "--disable-auto-launch", "--cpu", "--cpu-vae"]
