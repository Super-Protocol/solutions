version: '3.8'

services:
  build:
    image: nikolaik/python-nodejs:python3.10-nodejs16-bullseye
    container_name: sp-oracle-builder
    platform: linux/amd64
    volumes:
      - ./:/sp/run
    entrypoint: ['/bin/bash', '-c']
    command:
      - |
        apt-get install g++ make
        wget https://dl.google.com/go/go1.18.10.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.18.10.linux-amd64.tar.gz && rm go1.18.10.linux-amd64.tar.gz
        export PATH="$PATH:/usr/local/go/bin"
        mkdir -p /app
        shopt -s dotglob
        cp -r /sp/run/* /app
        cd /app
        npm i
        npm run build
        cp -ru /app/* /sp/run

  blockchain:
    image: blockchain-docker
    build:
      context: ../../
      dockerfile: ./sp-oracle/script/Dockerfile
    container_name: sp-oracle-blockchain
    ports:
      - 8545:8545
    volumes:
      - ./inputs:/output
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000']
      interval: 10s
      timeout: 10s
      retries: 5

  oracle:
    depends_on:
      blockchain:
        condition: service_healthy
    image: node:16-buster-slim
    container_name: sp-oracle
    platform: linux/amd64
    ports:
      - 9230:9230
    working_dir: /sp/run
    environment:
      - INPUT_DATA_FOLDER=/sp/inputs
      - NODE_ENV=test
    volumes:
      - ../shared:/sp/run/shared
      - ./inputs/input.local.json:/sp/inputs/input-0001/input.json
      - ./inputs/ca_certificates.crt:/sp/inputs/input-0001/ca_certificates.crt
      - ./:/sp/run
    entrypoint: ['yarn', 'nodemon']
